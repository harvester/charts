name: Harvester Charts

on:
  pull_request:
    branches:
      - master
      - release*
  push:
    branches:
      - master
      - release*

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          git remote add upstream https://github.com/harvester/charts.git
          git fetch upstream

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config tests/ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint-master)
        run: |
          if [ "${{github.base_ref}}" == "master" ]; then
            echo "validating against ${{github.base_ref}} without version bump validation"
            ct lint --check-version-increment=false --config tests/ct.yaml
          else
            echo "validating against ${{github.base_ref}}"
            ct lint --config tests/ct.yaml
          fi

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Create harvester-system namespace
        run: "kubectl create namespace harvester-system"
        if: steps.list-changed.outputs.changed == 'true'

      - name: Create roletemplate crd
        run: "kubectl create -f tests/roletemplate_crd.yaml"
        if: steps.list-changed.outputs.changed == 'true'
                
      - name: Run chart-testing (install)
        run: ct install --config tests/ct.yaml

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release')
    needs: lint-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.2.1
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
